<?xml version="1.0" encoding="UTF-8"?>
<!-- 是xsd约束文件 -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd 
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd 
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.3.xsd 
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd 
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd ">

<!-- 注解扫描和mvc的扫描 -->
	 <!-- 注解扫描 -->
    <context:component-scan base-package="com.lqc.*"></context:component-scan>
    
    <!-- mvc注解扫描-->
    <mvc:annotation-driven />

 	<!-- 静态资源配置 -->
	<mvc:default-servlet-handler/>
	<!-- 拦截器配置 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/productDetail.html"/>
			<mvc:mapping path="/shoping-cart.html"/>
			<mvc:mapping path="/account.html"/>
<!-- 			<mvc:mapping path="/Manager.html"/> -->
			<bean class="com.lqc.interceptor.UserInterceptor"></bean> 
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/*Manager.html"/>
			<bean class="com.lqc.interceptor.AdminInterceptor"></bean> 
		</mvc:interceptor>
	</mvc:interceptors>
	
	 <!-- springmvc文件上传需要配置的节点-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
     <property name="maxUploadSize" value="104857600" />
     <property name="maxInMemorySize" value="4096" />
     <property name="defaultEncoding" value="UTF-8"></property>
	</bean>
	
    <!-- 配置DataSource数据源 -->  
    
    <!--这第一句话的意思是引用你的jdbc.properties文件 如果你不想引用外边的properties文件 可以把下边的数据写死 -->
    <context:property-placeholder location="classpath:config/db.properties" />
    
    <!-- 配置数 druid数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
    <!-- 配置数据源 c3p0 -->
      <bean id="dataSource1" class="com.mchange.v2.c3p0.ComboPooledDataSource"
        destroy-method="close">
        <property name="driverClass" value="${jdbc.driver}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <!-- 关键配置 -->
        <!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
        <property name="initialPoolSize" value="3"></property>
        <!--连接池中保留的最小连接数。Default: 2 -->
        <property name="minPoolSize" value="2"></property>
        <!--连接池中保留的最大连接数。Default: 15 -->
        <property name="maxPoolSize" value="15"></property>
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
        <property name="acquireIncrement" value="3"></property>
        <!-- 性能配置 -->
        <!-- 控制数据源内加载的PreparedStatements数量。如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 
            0 -->
        <property name="maxStatements" value="8"></property>
        <!-- maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。Default: 
            0 -->
        <property name="maxStatementsPerConnection" value="5"></property>
        <!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
        <property name="maxIdleTime" value="1800"></property>
    </bean>

    <bean id="sqlsessionfactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>     
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
        <!-- 这句代码的意思找到你配置的mybatis-congif.xml 中配置的bean的别名-->
        <property name="configLocation" value="classpath:config/mybatis-config.xml"></property>
    </bean>
	<!-- 配置视图解析器 -->
	<bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
	    <property name="prefix" value="/WEB-INF/jsp/"/>
	    <property name="suffix" value=".jsp"/>
	</bean>
	<!-- 配置扫描Mapper以及子目录的文件 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      <property name="basePackage" value="com.lqc.dao"></property>
      <property name="sqlSessionFactoryBeanName" value="sqlsessionfactory"></property>
    </bean>

	<!-- 配置事务 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 事务驱动 -->
    <!-- <tx:annotation-driven/> -->

</beans>

